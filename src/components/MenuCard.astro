---
import { Plus, Star } from 'lucide-astro';

interface Props {
	id: number;
	name: string;
	description: string;
	price: number;
	image: string;
	category: string;
	popular: boolean;
}

const { id, name, description, price, image, category, popular } = Astro.props;
---

<div class={`menu-card group relative bg-white/5 backdrop-blur-sm rounded-2xl overflow-hidden hover:bg-white/10 transition-all duration-500 hover:scale-105 hover:shadow-2xl ${popular ? 'ring-2 ring-primary-600/50' : ''}`} data-category={category}>
	{popular && (
		<div class="absolute top-4 left-4 z-10 bg-primary-600 text-white px-3 py-1 rounded-full text-sm font-medium flex items-center gap-1">
			<Star size={14} fill="currentColor" />
			Populaire
		</div>
	)}
	
	<div class="aspect-video overflow-hidden">
		<img 
			src={image} 
			alt={name}
			class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
			loading="lazy"
		/>
	</div>
	
	<div class="p-6">
		<h3 class="text-xl font-semibold mb-2 text-white group-hover:text-primary-400 transition-colors">
			{name}
		</h3>
		<p class="text-white/70 text-sm mb-4 leading-relaxed">
			{description}
		</p>
		
		<div class="flex items-center justify-between">
			<span class="text-2xl font-bold text-primary-500">
				{price.toFixed(2)}€
			</span>
			
			<button class="add-to-cart-btn relative overflow-hidden bg-primary-600 hover:bg-primary-700 text-white p-3 rounded-full transition-all duration-300 hover:scale-110 hover:shadow-lg" data-id={id} data-name={name} data-price={price}>
				<Plus size={20} />
				<div class="absolute inset-0 bg-white/20 transform scale-0 transition-transform duration-300 rounded-full"></div>
			</button>
		</div>
	</div>
	
	<!-- Hover overlay -->
	<div class="absolute inset-0 bg-gradient-to-t from-primary-900/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
</div>

<style>
	.add-to-cart-btn:hover .absolute {
		transform: scale(1);
	}
	
	.menu-card {
		transform-origin: center;
	}
	
	.menu-card::before {
		content: '';
		position: absolute;
		inset: 0;
		background: linear-gradient(45deg, transparent, rgba(220, 38, 38, 0.1), transparent);
		opacity: 0;
		transition: opacity 0.3s ease;
		pointer-events: none;
	}
	
	.menu-card:hover::before {
		opacity: 1;
	}
</style>

<script>
	// Add to cart functionality
	let cart = [];
	
	document.addEventListener('click', (e) => {
		if (e.target.closest('.add-to-cart-btn')) {
			const button = e.target.closest('.add-to-cart-btn');
			const id = button.getAttribute('data-id');
			const name = button.getAttribute('data-name');
			const price = parseFloat(button.getAttribute('data-price'));
			
			// Add item to cart
			const existingItem = cart.find(item => item.id === id);
			if (existingItem) {
				existingItem.quantity += 1;
			} else {
				cart.push({ id, name, price, quantity: 1 });
			}
			
			// Update cart count
			const cartCount = document.getElementById('cart-count');
			if (cartCount) {
				const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
				cartCount.textContent = totalItems.toString();
			}
			
			// Button animation
			button.style.transform = 'scale(0.9)';
			setTimeout(() => {
				button.style.transform = 'scale(1)';
			}, 150);
			
			// Show feedback
			showAddToCartFeedback(name);
		}
	});
	
	function showAddToCartFeedback(itemName) {
		const feedback = document.createElement('div');
		feedback.className = 'fixed top-20 right-4 bg-primary-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 transition-all duration-300';
		feedback.textContent = `${itemName} ajouté au panier`;
		
		document.body.appendChild(feedback);
		
		setTimeout(() => {
			feedback.style.transform = 'translateX(100%)';
			feedback.style.opacity = '0';
		}, 2000);
		
		setTimeout(() => {
			document.body.removeChild(feedback);
		}, 2500);
	}
</script>