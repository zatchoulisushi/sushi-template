---
import { Menu, X, ShoppingBag, User } from 'lucide-astro';
---

<header class="fixed top-0 left-0 right-0 z-40 transition-all duration-300" id="header">
	<nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
		<div class="flex justify-between items-center h-16">
			<!-- Logo -->
			<div class="flex-shrink-0">
				<a href="/" class="text-2xl font-bold text-primary-600 hover:text-primary-500 transition-colors">
					<span class="text-3xl">üç£</span> Osushi
				</a>
			</div>
			
			<!-- Desktop Navigation -->
			<div class="hidden md:block">
				<div class="ml-10 flex items-baseline space-x-8">
					<a href="/" class="nav-link">Accueil</a>
					<a href="/menu" class="nav-link">Menu</a>
					<a href="/commander" class="nav-link">Commander</a>
					<a href="/fidelite" class="nav-link">Fid√©lit√©</a>
					<a href="/a-propos" class="nav-link">√Ä propos</a>
					<a href="/contact" class="nav-link">Contact</a>
				</div>
			</div>
			
			<!-- Actions -->
			<div class="hidden md:flex items-center space-x-4">
				<button class="p-2 rounded-full hover:bg-white/10 transition-colors relative">
					<ShoppingBag size={20} />
					<span class="absolute -top-1 -right-1 bg-primary-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center" id="cart-count">0</span>
				</button>
				<button class="p-2 rounded-full hover:bg-white/10 transition-colors">
					<User size={20} />
				</button>
				<button id="theme-toggle" class="p-2 rounded-full hover:bg-white/10 transition-colors">
					üåô
				</button>
			</div>
			
			<!-- Mobile menu button -->
			<div class="md:hidden">
				<button class="mobile-menu-button p-2 rounded-md hover:bg-white/10 transition-colors">
					<Menu size={24} class="menu-icon" />
					<X size={24} class="close-icon hidden" />
				</button>
			</div>
		</div>
	</nav>
	
	<!-- Mobile menu -->
	<div class="mobile-menu hidden md:hidden absolute top-full left-0 right-0 bg-dark-900/95 backdrop-blur-lg border-t border-white/10">
		<div class="px-4 py-4 space-y-1">
			<a href="/" class="block py-3 text-lg hover:text-primary-600 transition-colors">Accueil</a>
			<a href="/menu" class="block py-3 text-lg hover:text-primary-600 transition-colors">Menu</a>
			<a href="/commander" class="block py-3 text-lg hover:text-primary-600 transition-colors">Commander</a>
			<a href="/fidelite" class="block py-3 text-lg hover:text-primary-600 transition-colors">Fid√©lit√©</a>
			<a href="/a-propos" class="block py-3 text-lg hover:text-primary-600 transition-colors">√Ä propos</a>
			<a href="/contact" class="block py-3 text-lg hover:text-primary-600 transition-colors">Contact</a>
			<div class="flex items-center space-x-4 pt-3 border-t border-white/10">
				<button class="p-2 rounded-full hover:bg-white/10 transition-colors relative">
					<ShoppingBag size={20} />
					<span class="absolute -top-1 -right-1 bg-primary-600 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">0</span>
				</button>
				<button class="p-2 rounded-full hover:bg-white/10 transition-colors">
					<User size={20} />
				</button>
			</div>
		</div>
	</div>
</header>

<style>
	.nav-link {
		@apply text-white/80 hover:text-white font-medium transition-all duration-200 relative;
	}
	
	.nav-link::after {
		content: '';
		position: absolute;
		bottom: -4px;
		left: 50%;
		width: 0;
		height: 2px;
		background: linear-gradient(90deg, #dc2626, #ef4444);
		transition: all 0.3s ease;
		transform: translateX(-50%);
	}
	
	.nav-link:hover::after {
		width: 100%;
	}
	
	#header {
		background: rgba(10, 10, 10, 0.1);
		backdrop-filter: blur(20px);
	}
	
	#header.scrolled {
		background: rgba(10, 10, 10, 0.95);
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
	}
</style>

<script>
	// Header scroll effect
	const header = document.getElementById('header');
	let lastScrollY = window.scrollY;
	
	window.addEventListener('scroll', () => {
		const currentScrollY = window.scrollY;
		
		if (currentScrollY > 50) {
			header.classList.add('scrolled');
		} else {
			header.classList.remove('scrolled');
		}
		
		lastScrollY = currentScrollY;
	});
	
	// Mobile menu toggle
	const mobileMenuButton = document.querySelector('.mobile-menu-button');
	const mobileMenu = document.querySelector('.mobile-menu');
	const menuIcon = mobileMenuButton?.querySelector('.menu-icon');
	const closeIcon = mobileMenuButton?.querySelector('.close-icon');
	
	mobileMenuButton?.addEventListener('click', () => {
		const isOpen = !mobileMenu?.classList.contains('hidden');
		
		mobileMenu?.classList.toggle('hidden');
		
		// Toggle icons
		if (menuIcon && closeIcon) {
			if (isOpen) {
				menuIcon.classList.remove('hidden');
				closeIcon.classList.add('hidden');
			} else {
				menuIcon.classList.add('hidden');
				closeIcon.classList.remove('hidden');
			}
		}
	});
	
	// Theme toggle
	const themeToggle = document.getElementById('theme-toggle');
	
	themeToggle?.addEventListener('click', () => {
		document.documentElement.classList.toggle('dark');
		themeToggle.textContent = document.documentElement.classList.contains('dark') ? 'üåô' : '‚òÄÔ∏è';
	});
</script>